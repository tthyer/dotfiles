### K8S ALIASES
alias kc='kubectl'
alias kc-context='kubectl config current-context'

switchContext() {
  kc config set-context $1
}

getPodImage() {
 kc get pod $1 -o json | jq '.spec.containers[].image'
}

getPodNode() {
  kc get pod $1 -o json | jq '.spec.nodeName'
}

sshPod() {
  kc exec -it $1 -- bash
}

argoSchedulingPods() {
  kubectl get pods --all-namespaces --no-headers |  grep -v -E 'Completed|Running' | awk '{if ($1 ~ "argo-") print $0}'
}
export -f argoSchedulingPods

argoRunningPods() {
  kubectl get pods --all-namespaces --no-headers | grep Running | awk '{if ($1 ~ "argo-") print $0}'
}
export -f argoRunningPods

argoActiveJobs() {
  argo list --all-namespaces --since 6h --running
}
export -f argoActiveJobs

kubecostUi() {
  kubectl port-forward -n kubecost --context gke_applied-well-192611_us-east1_default  svc/kubecost-cost-analyzer 9090
}

opsPodName() {
  cut -d'/' -f2 <<< $(kubectl -n=default get pod -l name=k8s-ops-tools -o name)
}

opsPod() {
  kc -n=default exec -it $(opsPodName) -- bash
}

opsPodExec() {
  kc -n=default exec -it $(opsPodName) -- $1
}

copyFromOpsPod() {
  kc cp default/$(opsPodName):$1 $2
}

copyToOpsPod() {
  kc cp $1 default/$(opsPodName):$2
}

# The next line updates PATH for the Google Cloud SDK.
if [[ -f "${HOME}/google-cloud-sdk/path.bash.inc" ]]; then
  source "${HOME}/google-cloud-sdk/path.bash.inc"
fi

# The next line enables shell command completion for gcloud.
if [[ -f "${HOME}/google-cloud-sdk/completion.bash.inc" ]]; then
  source "${HOME}/google-cloud-sdk/completion.bash.inc"
fi

# Kubectl shell completion
if [[ -f "${HOME}/.kube/completion.bash.inc" ]]; then
  source "${HOME}/.kube/completion.bash.inc"
fi


